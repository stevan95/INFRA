name: Docker Image CI
on:
  workflow_dispatch:
    inputs:
      APPNAME: 
        description: |
          App folder location which contain dockerfile
        required: true
        type: string
jobs:
  docker-build-manual:
    if: github.event_name == 'workflow_dispatch
    environment: dev
    env:
      IAM_ROLE: ${{ secrets.IAM_ROLE }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
    name: "bild and push image by workflow_dispatch"
    runs-on: ubuntu-latest
    steps:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${IAM_ROLE}

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: INFRA

      - name: Prepare image tag
        id: image
        run: |
          TIMESTAMP="$(date -u +%Y-%m-%d-%H%M)"
          GIT_SHA="$(git --git-dir=INFRA/.git rev-parse --short=7 HEAD)"
          echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_OUTPUT
          echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push image to docker repo
        run: |
          APPNAME=${{ github.event.inputs.APPNAME }}
          BASE="INFRA/code"
          CONTEXT="build"
          DF="${CONTEXT}/Dockerfile"

          [ ! -d "$BASE/$APPNAME" ] && echo "App containing Dockerfile is not specified or does not exist" && exit 1
        
          cp -av "${BASE}/${APPNAME}/." build/
          mkdir -p "build/config"
      
          echo "${{ steps.image.outputs.GIT_SHA }},${{ steps.image.outputs.TIMESTAMP }}" >> "${CONTEXT}/config/Manifest"
          
          cd "${CONTEXT}"
          docker build -t $APPNAME .
          docker tag simple-app:latest "${ECR_REPO}":`cat config/Manifest | cut -d',' -f1`.`cat config/Manifest | cut -d',' -f2`
          docker push "${ECR_REPO}":`cat config/Manifest | cut -d',' -f1`.`cat config/Manifest | cut -d',' -f2`
           